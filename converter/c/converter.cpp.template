// Zawgyi<>Unicode converter for C
// Based on rules from Parabaik Myanmar Text Converter
// Copyright (C) 2014 Ngwe Tun (Solveware Solution)
// Copyright (C) 2014 Thura Hlaing

// This file is part of Paytan.

// Paytan is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// Paytan is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with Foobar.  If not, see <http://www.gnu.org/licenses/>.

#include <locale>
#include <string>
#include <iostream>
#include <sstream>
#include <fstream>
#include <pcrecpp.h>

#include "cmdline.h"

using namespace std;

typedef struct gengetopt_args_info args_info;

string uni512zg1 (string input) {
    string output = input;
    {% for rule in uni512zg1_rules -%}
    //pcre *uni512zg1_rule_{{loop.index}} = pcre_compile("{{rule.0}}", 0, NULL, NULL, NULL);

    {% endfor -%}
    return output;
}

string zg12uni51 (string input) {
    string output = input;
    {% for rule in zg12uni51_rules -%}
    //pcre *zg12uni51_rule_{{loop.index}} = pcre_compile("{{rule.0}}", 0, NULL, NULL, NULL);
    {% endfor -%}
    return output;
}


void handle_arguments(int, char**, args_info*);

int main(int argc, char **argv) {
    args_info args;
    handle_arguments(argc, argv, &args);
    locale("en_US.UTF8");

    int i = 0;
    for (; i < args.inputs_num; i++) {
	wifstream file;
	file.open(args.inputs[i]);
	if (!file.good()) {
	    cout << "Unable to read file `" << args.inputs[i] << "`." << endl;
	}
	file.close();
    }
}

void handle_arguments(int argc, char **argv, args_info* args) {
    /* let's call our cmdline parser */
    if (cmdline_parser (argc, argv, args) != 0)
	exit(1) ;

    if (args->help_given)
	{
	    cmdline_parser_print_help ();
	}

    if (args->version_given)
	{
	    cmdline_parser_print_version ();
	}
}
